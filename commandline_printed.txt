Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

PS C:\Users\seidy\OneDrive\GWU_Bootcamp\New Module-3\Election_Analysis> & C:/Users/seidy/AppData/Local/Programs/Python/Python37/python.exe
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> """PyPoll Homework Challenge Solution."""
'PyPoll Homework Challenge Solution.'
>>> # Add our dependencies.
>>> 
>>> import csv
>>> import os
>>> from email import header
>>> # Add a variable to load a file from a path.
>>>
>>> file_to_load = os.path.join("Resources", "election_results.csv")
>>> # Add a variable to save the file to a path.
>>>
>>> file_to_save = os.path.join("analysis", "election_analysis.txt")
>>> # Initialize a total vote counter.
>>>
>>> total_votes = 0
>>> # Candidate Options and candidate votes.
>>>
>>> candidate_options = []
>>> candidate_votes = {}
>>> # 1: Create a county list and county votes dictionary.
>>>
>>> county_list = []
>>> county_votes = {}
>>> # Track the winning candidate, vote count and percentage
>>>
>>> winning_candidate = ""
>>> winning_count = 0
>>> winning_percentage = 0
>>> # 2: Track the largest county and county voter turnout.
>>>
>>> countyname_highturnout = ""
>>> largest_county_vote=0
>>> largest_county_percentage=0
>>> # Read the csv and convert it into a list of dictionaries
>>> #creating opening  the data variable
>>>
>>> election_data=open(file_to_load,"r")
>>> #crearing data reader variable
>>>
>>> file_reader = csv.reader(election_data)
>>> #read the header row
>>>
>>> headers = next(file_reader)
>>> #print headers
>>>
>>> print(headers)
['Ballot ID', 'County', 'Candidate']
>>> # For each row in the CSV file.
>>>
>>> for row in file_reader:
...    # Add to the total vote count
...     total_votes += 1
...     # Get the candidate name from each row.
...     candidate_name = row[2]
...     # Extract the county name from each row
...     county_name = row[1]
...     # If the candidate does not match any existing candidate add it to
...         # the candidate list
...     if candidate_name not in candidate_options:
...        # Add the candidate name to the candidate list.
...        candidate_options.append(candidate_name)
...        # And begin tracking that candidate's voter count.
...        candidate_votes[candidate_name] = 0
...     # Add a vote to that candidate's count
...     candidate_votes[candidate_name] += 1
...         # 4a: Write an if statement that checks that the
...     # county does not match any existing county in the county list.
...     if county_name not in county_list:
...         #4b: add the existing county  to the list of counties
...        county_list.append(county_name)
...         # 4c: Begin tracking the county's vote count.
...        county_votes[county_name]=0
...     # 5: Add a vote to that county's vote count
...     county_votes[county_name] +=1
... # Save the results to our text file.   
...
>>> txt_file=open(file_to_save,"w")
>>> election_results =(
...         f"\nElection Results\n"
...         f"-------------------------\n"
...         f"Total Votes: {total_votes:,}\n"
...         f"--------------------------\n\n"
...         f"county_voutes:{county_votes[county_name]}\n")
>>>
>>> print(election_results, end="")

Election Results
-------------------------
Total Votes: 369,711
--------------------------

county_voutes:24801
>>> # Save the final vote count to the text file.
>>>
>>> txt_file.write(election_results)
113
>>> # 6a: Write a for loop to get the county from the county dictionary.
>>>
>>> for county_name in county_votes:
...     # 6b: Retrieve the county vote count.
...     votes_c=county_votes[county_name]
...     # 6c: Calculate the percentage of votes for the county.
...     county_percentage = round(float(votes_c) / float(total_votes) * 100,3)
...     # 6d: Print the county results to the terminal.
...     county_result=(
...         f"{county_name}: {county_percentage:.1f}% ({votes_c:,})\n")
...     print(county_result)
...     # 6e: Save the county votes to a text file.
...     txt_file.write(county_result)
...     # 6f: Write an if statement to determine the winning county and get its vote count.
...     if (votes_c>largest_county_vote) and (county_percentage>largest_county_percentage):
...         #  If true then set winning_county_vote = votes_c and winning_county_percentage =
...          # county_percentage.
...         largest_county_vote=votes_c
...         largest_county_percentage=county_percentage
...         # And, set the winning_county equal to the county's name
...         countyname_highturnout = county_name
... # 7: Print the county with the largest turnout to the terminal.
...
Jefferson: 10.5% (38,855)

26
Denver: 82.8% (306,055)

24
Arapahoe: 6.7% (24,801)

24
>>> largest_countyvote_summary = (
...     f"-------------------------\n"
...     f"County Name with largest turnout: {countyname_highturnout}\n"
...     f"Largest county Vote Count: {largest_county_vote:,}\n"
...     f"largest Percentage: {largest_county_percentage:.1f}%\n"
...     f"-------------------------\n")
>>>
>>> print(largest_countyvote_summary)
-------------------------
County Name with largest turnout: Denver
Largest county Vote Count: 306,055
largest Percentage: 82.8%
-------------------------

>>> # 8: Save the county with the largest turnout to a text file.
>>>
>>> txt_file.write(largest_countyvote_summary)
154
>>> # Save the final candidate vote count to the text file.
>>>
>>> for candidate_name in candidate_votes:
...     # Retrieve vote count of a candidate.
...     votes = candidate_votes[candidate_name]
...     # Calculate the percentage of votes.
...     vote_percentage = round(float(votes) / float(total_votes) * 100,2)
...     #  Print the candidate name and percentage of votes.
...     candidate_result=(
...         f"{candidate_name}: {vote_percentage:.1f}% ({votes:,})\n")
...     #print candidate result
...     print(candidate_result)
...     #save the candidate result to our text file
...     txt_file.write(candidate_result)
...     # Determine winning vote count, winning percentage, and candidate.
...     if (votes > winning_count) and (vote_percentage > winning_percentage):
...          # If true then set winning_count = votes and winning_percent =
...          # vote_percentage.
...          winning_count = votes
...          winning_percentage = vote_percentage
...          # And, set the winning_candidate equal to the candidate's name.
...          winning_candidate = candidate_name
... # Print the winning candidate (to terminal)
...
Charles Casper Stockham: 23.1% (85,213)

40
Diana DeGette: 73.8% (272,892)

31
Raymon Anthony Doane: 3.1% (11,606)

36
>>> winning_candidate_summary = (
...     f"-------------------------\n"
...     f"Winner: {winning_candidate}\n"
...     f"Winning Vote Count: {winning_count:,}\n"
...     f"Winning Percentage: {winning_percentage:.1f}%\n"
...     f"-------------------------\n")
>>>
>>> print(winning_candidate_summary)
-------------------------
Winner: Diana DeGette
Winning Vote Count: 272,892
Winning Percentage: 73.8%
-------------------------

>>> # Save the winning candidate's name to the text file
>>>
>>> txt_file.write(winning_candidate_summary)
128
>>> file_to_save = os.path.join("analysis", "election_analysis.txt")
>>> txt_file=open(file_to_save,"w")
>>> print(election_results, end="")

Election Results
-------------------------
Total Votes: 369,711
--------------------------

county_voutes:24801
>>> txt_file.write(county_result)
24
>>> txt_file.write(largest_countyvote_summary)
154
>>> txt_file.write(candidate_result)
36
>>> txt_file.write(winning_candidate_summary)
128
>>>     #save the candidate result to our text file                            